.search-form {
  display: flex;
  gap: var(--grid-gap);
  margin-bottom: 2rem;
  position: relative;
  animation: slideInFromTop 0.4s ease-out;
}

@keyframes slideInFromTop {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.search-field {
  flex: 1;
  position: relative;
}

.search-field .mat-mdc-form-field-flex {
  background: var(--input-background);
  border: 1px solid var(--border-green);
  transition: all 0.3s ease;
}

.search-field:hover .mat-mdc-form-field-flex {
  border-color: rgba(105, 240, 174, 0.3);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.search-field.mat-focused .mat-mdc-form-field-flex {
  border-color: var(--primary-green);
  box-shadow: 0 4px 12px rgba(105, 240, 174, 0.2);
}

.mat-mdc-form-field-prefix {
  color: var(--text-muted);
  margin-right: 12px;
  transition: color 0.3s ease;
}

.mat-focused .mat-mdc-form-field-prefix {
  color: var(--primary-green);
}

.search-icon {
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

.clear-button {
  opacity: 0;
  transform: scale(0.8);
  transition: opacity 0.2s ease, transform 0.2s ease;
}

.has-value .clear-button {
  opacity: 1;
  transform: scale(1);
}

/* Responsive Design */
@media (max-width: 768px) {
  .search-form {
    flex-direction: column;
  }
  
  .search-field {
    width: 100%;
  }
  
  ::ng-deep .mat-mdc-form-field {
    width: 100%;
  }
}

/* Loading State */
.loading {
  position: absolute;
  right: 8px;
  top: 50%;
  transform: translateY(-50%);
  animation: rotateIn 0.3s ease-out;
}

@keyframes rotateIn {
  from {
    opacity: 0;
    transform: translateY(-50%) rotate(-180deg);
  }
  to {
    opacity: 1;
    transform: translateY(-50%) rotate(0);
  }
} 
